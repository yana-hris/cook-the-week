@model IEnumerable<ISupplyItemListModel<IngredientItemViewModel>>

<div class="container-fluid">
    <div class="all-categories-container">
        @foreach (var category in Model)
        {
            if (category.SupplyItems.Count > 0)
            {
                <div class="products-by-category-container">
                    <p class="ingredient-heading">@category.Title:</p>
                    <ul class="list-unstyled">
                        @foreach (var product in category.SupplyItems)
                        {
                            <li>
                                @if (product.ChildItems != null && product.ChildItems.Count > 1){
                                    <span class="text-capitalize fw-medium">@product.Name</span>

                                    <ul class="list-unstyled ms-3">
                                        @foreach (var measure in product.ChildItems)
                                        {
                                            <li>
                                                <!-- Generalized Measure -->
                                                @Html.Raw(measure.Qty) <span class="units-styler">@measure.Measure</span>

                                                <!-- Notes for Measure -->
                                                @if (measure.ChildItems != null && measure.ChildItems.Count > 1)
                                                {
                                                    <p class="add-border-bottom"><span class="fw-bold  fst-italic">in total</span>, of which:</p>
                                                    <ul class="list-unstyled nested-ingredients">
                                                        @foreach (var note in measure.ChildItems)
                                                        {
                                                            <li>
                                                                - @Html.Raw(note.Qty) <span class="units-styler">@note.Measure</span> @note.Note
                                                            </li>
                                                        }
                                                    </ul>
                                                }
                                            </li>
                                        }
                                    </ul>
                                }
                                else if (product.ChildItems != null && product.ChildItems.Count == 1)
                                {
                                    var singleProduct = product.ChildItems.First();
                                    bool hasVariations = singleProduct.ChildItems != null && singleProduct.ChildItems.Count > 0;


                                    @if (hasVariations && singleProduct.ChildItems!.Count > 1)
                                    {
                                        <span class="text-capitalize fw-medium">@product.Name</span> @singleProduct.Qty <span class="units-styler">@singleProduct.Measure</span>
                                        <p class="add-border-bottom"><span class="fw-bold  fst-italic">in total</span>, of which:</p>
                                        <ul class="list-unstyled nested-ingredients">
                                            @foreach (var note in singleProduct.ChildItems!)
                                            {
                                                <li>
                                                    - @Html.Raw(note.Qty) <span class="units-styler">@note.Measure</span> @note.Note
                                                </li>
                                            }
                                        </ul>
                                    }
                                    else if (hasVariations && singleProduct.ChildItems!.Count == 1)
                                    {
                                        var simpleProduct = singleProduct.ChildItems.First()!;
                                        <span class="text-capitalize fw-medium">@product.Name</span> @simpleProduct.Qty <span class="units-styler">@simpleProduct.Measure</span> @simpleProduct.Note
                                    }
                                }
                                
                            
                        </li>
                    }
                </ul>

            </div>
            
        }
    }
    </div>
</div>
