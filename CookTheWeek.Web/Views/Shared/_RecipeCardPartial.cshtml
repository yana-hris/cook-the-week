@model RecipeAllViewModel

@inject IUserContext UserContext
@inject IFavouriteRecipeService LikesService

@using CookTheWeek.Common.Extensions
@using CookTheWeek.Common.HelperMethods
@using CookTheWeek.Services.Data.Services.Interfaces

@using static CookTheWeek.Common.GeneralApplicationConstants

@{
    Guid recipeId = Model.Id;
    Guid userId = UserContext.UserId;
    bool isAdmin = UserContext.IsAdmin;
    bool isOwner = (userId != default && userId == Model.OwnerId);
}


<div class="col recipe-container">    
    <div class="card recipe-card">
        <div class="position-relative image-container">
            <img class="card-img-top" alt="Recipe Image" src="@Model.ImageUrl">
            @if (userId != default && !isOwner && !isAdmin)
            {
                bool isLiked = await this.LikesService.GetRecipeLikeIfExistsAsync(recipeId) != null;

                <a class="add-to-favourites-button" data-recipe-id="@Model.Id">
                    @if (isLiked)
                    {
                        <i class="fas fa-heart liked-icon" data-toggle="tooltip" title="Remove from Favorites"></i>
                    }
                    else
                    {
                        <i class="fas fa-heart not-liked-icon" data-toggle="tooltip" title="Add to Favorites"></i>
                    }
                </a>
            } else if(isOwner && !isAdmin)
            {
                <i class="fa-solid fa-bookmark"></i>                
            }
            else if(isAdmin && Model.IsSiteRecipe)
            {
                <i class="fa-solid fa-house"></i>
            }
            else if (isAdmin && !Model.IsSiteRecipe)
            {
                <i class="fa-solid fa-user-plus"></i>
            }
            @if(userId != default && !isAdmin)
            {
                <div class="add-to-mealplan-container">
                    <a data-recipeId="@Model.Id" class="mealplan-toggle-btn plus">
                        <i class="fa fa-plus" aria-hidden="true"></i>
                    </a>
                </div>
            }            
    </div>
        <div class="card-body p-2">
            <a class="recipe-details-link" asp-area="" asp-controller="Recipe" asp-action="Details" asp-route-id="@Model.Id" asp-route-returnUrl="@ViewBag.ReturnUrl">
                <p class="recipe-title">@Html.Raw(Model.Title.TrimToChar(RecipeCardTitleMaxLength))</p>
            </a>
            <div class="d-flex align-items-center justify-content-between recipe-info">
                    <span class="badge @BadgeColorHelper.GetBadgeColor(Model.MealType)">@Model.MealType</span>                    
                    <div class="d-flex align-items-center justify-content-center time">
                    <i class="fa-solid fa-stopwatch"></i>
                        <span class="icon-text">@Model.CookingTime</span>
                    </div>
                </div>
            
            @if (Model.Description != null)
            {
            <div class="recipe-description">
                <p class="card-text text-overflow-clamp">@Model.Description.TrimToChar(RecipeCardDescriptionMaxLength)</p>
            </div>
            }
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>