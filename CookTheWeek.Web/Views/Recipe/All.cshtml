@model AllRecipesFilteredAndPagedViewModel
@inject IUserContext UserContext
@{

    Guid userId = UserContext.UserId;
    bool hasActiveMealplan = UserContext.HasActiveMealplan;

    var headingModel = new PageHeadingViewModel
    {
        Subheading = "Browse Recipes",
        HeadingSecondary = "Find delicious recipes to cook this week"
    };

    bool justLoggedIn = TempData[JustLoggedIn] as bool? ?? false;
    bool showModal = justLoggedIn || userId == default;

    if (showModal && hasActiveMealplan)
    {
        if (Model.ActiveMealPlan != null)
        {
            Model.ActiveMealPlan.HasActiveMealPlan = hasActiveMealplan;
            Model.ActiveMealPlan.UserId = userId;
            Model.ActiveMealPlan.JustLoggedIn = justLoggedIn;
        }       
    }
}

<div class="wide-contents-container has-build-btn">
    <partial name="_HeadingPartial" model="headingModel" />

    <!-- Search and Filter panel -->
    <div class="row text-center filter-container">
        <form id="all-recipes-form" method="get" class="pb-1">
            @Html.AntiForgeryToken()
            <div class="row align-items-center justify-content-between g-0 gy-3">
                <div class="col-12 col-sm-6 col-md-4 col-lg-3 order-md-first ps-sm-3 ps-md-0">
                    <div class="input-group">
                        <span class="input-group-text">Type</span>
                        <select asp-for="Category" class="form-select">
                            <option value="">All</option>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category">@category</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col col-12 col-sm-6 col-md-4 col-lg-2 order-lg-3">
                    <div class="input-group">
                        <span class="input-group-text">Sort</span>
                        <select asp-for="RecipeSorting" class="form-select">
                            @foreach (var option in Model.RecipeSortings)
                            {
                                <option value="@option.Key">@option.Value</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-md-12 col-lg-4 order-first order-md-2">
                    <div class="input-group">
                        <span class="input-group-text">Filter</span>
                        <input asp-for="SearchString" class="form-control search" placeholder="Search for recipes or ingredients" />
                        <button type="submit" value="Search" class="btn btn-primary search-btn" form="all-recipes-form">Search</button>
                    </div>
                </div>
                <div class="col col-12 col-sm-6 col-md-3 col-lg-2 order-lg-4 ps-sm-3 ps-md-0">
                    <div class="input-group">
                        <span class="input-group-text">Per Pg</span>
                        <select asp-for="RecipesPerPage" class="form-select">
                            <option value="8">8</option>
                            <option value="12">12</option>
                            <option value="16">16</option>
                            <option value="20">20</option>
                            <option value="24">24</option>
                        </select>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <partial name="_BuildBtnPartial" />

    <!-- Recipes Container -->
    <div class="row">        
        <div class="container">
            @if (!Model.Recipes.Any())
            {
                <h2 class="text-center pt-5">No recipes found by the given criteria!</h2>
            }
            else
            {
                <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-3"> 
                    @foreach (var recipe in Model.Recipes)
                    {
                        <partial name="_RecipeCardPartial" model="recipe"/>
                    }
                </div>
            }
        </div>
    </div>
    
    @{
        int previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }

        int maxPage = (int)Math.Ceiling((double)Model.TotalRecipes / Model.RecipesPerPage);
        bool shouldDisplayPagination = Model.CurrentPage > 1 || Model.CurrentPage < maxPage;
    }
    <!-- Pagination buttons -->
    @if(shouldDisplayPagination)
    {
        <div aria-label="Page navigation" id="pagination-buttons">
            <ul class="pagination d-flex justify-content-end align-items-center">
                <li class="page-item">
                    <a class="pagination-btn @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                       asp-controller="Recipe"
                       asp-action="All"
                       asp-route-currentPage="@previousPage"
                       asp-route-category="@Model.Category"
                       asp-route-searchTerm="@Model.SearchString"
                       asp-route-sorting="@((int)Model.RecipeSorting)"
                       aria-disabled="@(Model.CurrentPage == 1 ? true : false)">
                        <i class="fa-solid fa-angles-left"></i>
                    </a>
                </li>
                @{
                    bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
                    !Model.Recipes.Any();
                }
                <li class="page-item">
                    <a class="pagination-btn @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
                       asp-controller="Recipe"
                       asp-action="All"
                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                       asp-route-category="@Model.Category"
                       asp-route-searchTerm="@Model.SearchString"
                       asp-route-sorting="@((int)Model.RecipeSorting)"
                       aria-disabled="@(shouldNextPageBeDisabled ? true : false)">
                        <i class="fa-solid fa-angles-right"></i>
                    </a>
                </li>
            </ul>
        </div>
    }
    <!-- Modal -->
    <partial name="_WelcomeModalPartial" model="@Model.ActiveMealPlan"/>   
</div>

@section Scripts {    
    <script type="module">
        import { attachToggleFavouritesHandler } from '/js/recipeLikes.js';

        $(document).ready(function () {            
            if ('@showModal' === "True") {  
                
                console.log("Showing modal...");
                $('#welcomeModal').modal('show');
            } 

            debugger;
            attachToggleFavouritesHandler();
        });
    </script>

}





