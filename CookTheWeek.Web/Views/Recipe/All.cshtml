@using CookTheWeek.Services.Data.Interfaces
@using CookTheWeek.Web.Infrastructure.Extensions
@inject IUserService UserService
@inject IFavouriteRecipeService FavouriteRecipeService
@model AllRecipesQueryModel
@{
    ViewBag.Title = "All Recipes";
    string userId = User.GetId();   
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<div class="container-xl" style="max-width: 1200px;">
    <div class="row">
        <form method="get" class="pb-4">
            <div class="row justify-content-between align-items-center">
                <div class="col-sm-3">
                    <div class="form-group">
                        <label asp-for="Category" class="form-label">Category</label>
                        <select asp-for="Category" class="form-control">
                            <option value="">All</option>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category">@category</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-sm-5">
                    <div class="form-group">
                        <label asp-for="SearchString" class="form-label">Search</label>
                        <input asp-for="SearchString" class="form-control" placeholder="..." />
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        <label asp-for="RecipeSorting" class="form-label">Sort By</label>
                        <select asp-for="RecipeSorting" class="form-control">
                            @foreach (var option in Model.RecipeSortings)
                            {
                                <option value="@option.Key">@option.Value</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-sm-auto">
                    <div class="row align-items-end">
                        <div class="col-sm-6">
                            <div class="form-group mb-0">
                                <label asp-for="RecipesPerPage" class="form-label">Per Page</label>
                                <select asp-for="RecipesPerPage" class="form-control">
                                    <option value="8">8</option>
                                    <option value="12">12</option>
                                    <option value="16">16</option>
                                    <option value="20">20</option>
                                    <option value="24">24</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group mb-0 d-flex justify-content-end">
                                <button type="submit" value="Search" class="btn btn-success">Search</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        <div class="container pt-2">
            @if (!Model.Recipes.Any())
            {
                <h2 class="text-center">No recipes found by the given criteria!</h2>
            }
            else
            {
                <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4">
                    @foreach (var recipe in Model.Recipes)
                    {
                        string recipeId = recipe.Id;
                        bool isOwner = await this.UserService.IsOwner(recipeId, userId);

                        <div class="col justify-content-center" style="max-width:30rem;">
                            <div class="card mb-3 rounded-5 h-100">
                                <div class="position-relative">
                                    <img src="@recipe.ImageUrl" class="card-img-top" alt="Recipe Image" style="width: 100%; height:13rem;object-fit:cover;">
                                    @if (!string.IsNullOrEmpty(userId) && !isOwner)
                                    {                                        
                                        bool isInFavourites = await this.FavouriteRecipeService.IsFavouriteRecipeForUserByIdAsync(recipeId, userId);
                                        
                                        <button class="add-to-favorites-button position-absolute top-0 end-0 m-3" onclick="toggleFavourites(event, '@recipeId', '@userId')">
                                            
                                            @if (isInFavourites)
                                            {
                                                <i class="fas fa-heart"></i>
                                            }
                                            else
                                            {
                                                <i class="far fa-heart"></i>
                                            }
                                        </button>
                                    }
                                </div>
                                <div class="card-body pt-1">
                                    <div class="row mb-1">
                                        <div class="col-md-6">
                                            <span class="badge bg-primary text-light">@recipe.Category.Name</span>
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-between pb-3">
                                        <div>
                                            <i class="fa-solid fa-utensils"></i> <span>@recipe.Servings</span>
                                        </div>
                                        <div>
                                            <i class="fa-solid fa-clock"></i> <span>@recipe.CookingTime</span>
                                        </div>
                                    </div>
                                    <div class="d-grid pb-2">
                                        <h5 class="card-title">@recipe.Title</h5>
                                        <a class="d-block" asp-asp-area="" asp-asp-controller="Recipe" asp-action="Details" asp-route-id="@recipe.Id" class="btn btn-primary">View Recipe</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>      
        @{
            int previousPage = Model.CurrentPage - 1;
            if (previousPage < 1)
            {
                previousPage = 1;
            }

            int maxPage = (int)Math.Ceiling((double)Model.TotalRecipes / Model.RecipesPerPage);
        }
        <!-- Pagination buttons -->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center mt-3 gap-bg-opacity-25 fixed-bottom">
                <li class="page-item">
                    <a class="btn btn-success @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                       asp-controller="Recipe"
                       asp-action="All"
                       asp-route-currentPage="@previousPage"
                       asp-route-category="@Model.Category"
                       asp-route-searchTerm="@Model.SearchString"
                       asp-route-sorting="@((int)Model.RecipeSorting)">&lt;&lt;</a>
                </li>
                @{
                    bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
                    !Model.Recipes.Any();
                }
                <li class="page-item">
                    <a class="btn btn-success
            @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
                       asp-controller="Recipe"
                       asp-action="All"
                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                       asp-route-category="@Model.Category"
                       asp-route-searchTerm="@Model.SearchString"
                       asp-route-sorting="@((int)Model.RecipeSorting)">>></a>
                </li>
            </ul>
        </nav>
               
    </div>
</div>
@section Scripts {
    <script>
        function toggleFavourites(event, recipeId, userId) {
            event.preventDefault();
            var $button = $(event.currentTarget);
            let url = 'https://localhost:7279/api/favouriteRecipe/toggleFavourites';
           
            var data = {
                RecipeId: recipeId, 
                UserId: userId 
            }            
       
            $.ajax({
                url: url,
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (response) {
                    // Handle success response
                    $button.find('i').toggleClass('far fas');
                    toastr.success("Your preference is saved!");
                },
                error: function (xhr, status, error) {
                    // Handle error
                    if (xhr.status === 400) {
                        // Handle 400 Bad Request error
                        toastr.error('Bad Request: Please check your input and try again.');
                    } else {
                        // Display generic error message
                        toastr.error('Your preference not saved:', error);
                    }
                }
            });
        }
    </script>
}





