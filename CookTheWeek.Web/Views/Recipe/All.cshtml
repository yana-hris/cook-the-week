@model AllRecipesQueryModel
@using CookTheWeek.Services.Data.Interfaces
@using CookTheWeek.Web.Infrastructure.Extensions
@inject IUserService UserService
@inject IFavouriteRecipeService FavouriteRecipeService
@using static CookTheWeek.Common.GeneralApplicationConstants;
@{
    string userId = User.GetId();
    bool isAdmin = User.IsAdmin();

    var headingModel = new PageHeadingViewModel
    {
        Subheading = "Browse Recipes"
    };

    if (!isAdmin)
    {
        headingModel.HeadingSecondary = "Find delicious recipes to cook this week";
    }
}

<div class="wide-contents-container">
    <partial name="_HeadingPartial" model="headingModel" />
        
    <div class="row">
        <form id="all-recipes-form" method="get" class="pb-1">
            <div class="row justify-content-center justify-content-sm-between align-items-center gy-2 gx-0">
                <div class="col-12 col-sm-6 col-md-4 col-lg-3 order-md-first">
                    <div class="input-group">
                        <span class="input-group-text">Type</span>
                        <select asp-for="Category" class="form-select">
                            <option value="">All</option>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category">@category</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col col-12 col-sm-6 col-md-4 col-lg-2 order-lg-3">
                    <div class="input-group">
                        <span class="input-group-text">Sort</span>
                        <select asp-for="RecipeSorting" class="form-select">
                            @foreach (var option in Model.RecipeSortings)
                            {
                                <option value="@option.Key">@option.Value</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-md-12 col-lg-4 order-4 order-md-2">
                    <div class="input-group">
                        <span class="input-group-text">Filter</span>
                        <input asp-for="SearchString" class="form-control search" placeholder="Search for recipes or ingredients" />
                        <button type="submit" value="Search" class="btn btn-primary search-btn" form="all-recipes-form">Search</button>
                    </div>
                </div>
                <div class="col col-12 col-sm-6 col-md-3 col-lg-2 order-lg-4">
                    <div class="input-group">
                        <span class="input-group-text">Per Pg</span>
                        <select asp-for="RecipesPerPage" class="form-select">
                            <option value="8">8</option>
                            <option value="12">12</option>
                            <option value="16">16</option>
                            <option value="20">20</option>
                            <option value="24">24</option>
                        </select>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <partial name="_BuildBtnPartial" />

    <div class="row">        
        <div class="container">
            @if (!Model.Recipes.Any())
            {
                <h2 class="text-center pt-5">No recipes found by the given criteria!</h2>
            }
            else
            {
                <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-3"> 
                    @foreach (var recipe in Model.Recipes)
                    {
                        <partial name="_RecipeCardPartial" model="recipe"/>
                    }
                </div>
            }
        </div>
    </div>
    <!-- Modal Overlay WELCOME MESSAGE -->
    <div class="modal-overlay" id="modalOverlay"></div>

    <!-- Modal -->
    <div class="modal fade" id="welcomeModal" tabindex="-1" role="dialog" aria-labelledby="welcomeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                
                @if (userId == string.Empty)
                {
                    <div class="modal-header d-flex justify-content-center">
                        <h2 class="modal-title" id="welcomeModalLabel">Welcome to Cook-The-Week</h2>
                        <button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
                            <i class="fa fa-times" aria-hidden="true"></i>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>
                            Discover a world of culinary inspiration right at your fingertips. Explore our diverse collection of recipes and start imagining your perfect meal plan.
                        </p>
                        <p>
                            Sign up today to unlock the full experience and effortlessly add your favorite recipes to a personalized meal plan. 
                        </p>                
                    </div>
                }
                else
                {
                    <div class="modal-header d-flex justify-content-center">
                        <h2 class="modal-title" id="welcomeModalLabel">Tailor Your Meal Plan Now</h2>
                        <button type="button" class="btn close" data-dismiss="modal" aria-label="Close">
                            <i class="fa fa-times" aria-hidden="true"></i>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>
                            Browse Our Recipes section and craft your ideal meal plan by simply clicking 'Add to Meal Plan' on your favorite recipes.
                        </p>                            
                        <p>
                            Once saved, your Meal Plans can be reused and tailored to your current needs. Find out more on Meal Plans Section!
                        </p>
                    </div>
                }
                              
                <div class="modal-footer">
                    @if (userId == string.Empty)
                    {
                        <a asp-area="" asp-action="Login" asp-controller="User" class="btn btn-primary card-btn-width">
                            <i class="fa fa-sign-in" aria-hidden="true"></i>&nbsp;Log In
                        </a>
                        <a asp-area="" asp-action="Register" asp-controller="User" class="btn btn-outline-danger card-btn-width">Sign Up</a>
                    }
                    else
                    {
                        <a asp-area="" asp-action="All" asp-controller="Recipe" class="btn btn-primary card-btn-width">
                            <i class="fa fa-search" aria-hidden="true"></i>&nbsp;Recipes
                        </a>
                        <a asp-area="" asp-action="Mine" asp-controller="MealPlan" class="btn btn-outline-danger card-btn-width">Your Plans</a>
                    }
                </div>
            </div>
        </div>
    </div>
    @{
        int previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }

        int maxPage = (int)Math.Ceiling((double)Model.TotalRecipes / Model.RecipesPerPage);
        bool shouldDisplayPagination = Model.CurrentPage > 1 || Model.CurrentPage < maxPage;
    }
    <!-- Pagination buttons -->
    @if(shouldDisplayPagination)
    {
        <div aria-label="Page navigation" id="pagination-buttons" class="position-fixed">
            <ul class="pagination d-flex justify-content-end align-items-center">
                <li class="page-item">
                    <a class="btn btn-primary btn-icon-only fixed-size-btn @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
                       asp-controller="Recipe"
                       asp-action="All"
                       asp-route-currentPage="@previousPage"
                       asp-route-category="@Model.Category"
                       asp-route-searchTerm="@Model.SearchString"
                       asp-route-sorting="@((int)Model.RecipeSorting)">
                        <i class="fa-solid fa-angles-left"></i>
                    </a>
                </li>
                @{
                    bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
                    !Model.Recipes.Any();
                }
                <li class="page-item">
                    <a class="btn btn-primary btn-icon-only fixed-size-btn
        @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
                       asp-controller="Recipe"
                       asp-action="All"
                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                       asp-route-category="@Model.Category"
                       asp-route-searchTerm="@Model.SearchString"
                       asp-route-sorting="@((int)Model.RecipeSorting)">
                        <i class="fa-solid fa-angles-right"></i>
                    </a>
                </li>
            </ul>
        </div>
    }
    
</div>
@section Scripts {    
    <script>
        // Like btn functionality
        function toggleFavourites(event, recipeId, userId) {
            event.preventDefault();
            event.stopPropagation();

            // Change the state of the btn & icon
            toggleLikeButton(event);

            let url = 'https://localhost:7279/api/favouriteRecipe/toggleFavourites';

            var data = {
                RecipeId: recipeId,
                UserId: userId
            }
            
            $.ajax({
                url: url,
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),

                success: function (response) {                    
                    toastr.success("Your preference is saved!");
                },
                error: function (xhr, status, error) {                    
                    // Display generic error message
                    toastr.error('Your preference not saved:', error);                    
                    // In case of error, return the icon status to the previous state
                    toggleLikeBtn(event);
                }
            });
        }

        function toggleLikeButton(event) {
            const $button = $(event.currentTarget);   
            
            $button.find('i').toggleClass('liked-icon not-liked-icon');
            
            // Check the current state and set the new title based on the state
            let isLiked = $button.find('i').hasClass('liked-icon');
            let newTitle = isLiked ? 'Remove from Favorites' : 'Add to Favorites';
            
            // Update the title and refresh the tooltip
            $button.find('i')
                .attr('title', newTitle)
                .tooltip('dispose') // Dispose of the current tooltip
                .tooltip(); // Re-initialize the tooltip
        }
    </script>    
    <script>        
        $(document).ready(function () {
            var isUserAdmin = '@isAdmin';
            var justLoggedIn = '@(TempData[JustLoggedIn] != null ? "true" : "false")';

            if (!currentUserId || (isUserAdmin == 'False' && justLoggedIn === "true")) {
                $('#welcomeModal').modal('show');
            } 

            $('#welcomeModal').on('show.bs.modal', function (e) {
                $('#modalOverlay').show();
            });

            $('#welcomeModal').on('hidden.bs.modal', function (e) {
                $('#modalOverlay').hide();
            });

            $('#welcomeModal').on('click', '[data-dismiss="modal"]', function (e) {
                $('#welcomeModal').modal('hide');
            });
        });
    </script>

}





