@model RecipeMineViewModel
@using CookTheWeek.Services.Data.Interfaces
@using CookTheWeek.Web.Infrastructure.Extensions
@inject IRecipeService RecipeService
@{
    string ownedRecipeHeading = "Added By You";
    bool isAdmin = User.IsAdmin();
    string userId = User.GetId();

    if(isAdmin)
    {
        ownedRecipeHeading = "Site Recipes";
    }
}
@if (!Model.FavouriteRecipes.Any() && !Model.OwnedRecipes.Any())
{
    <h2 class="text-center">You have no recipes yet!</h2>
}
else
{
    <div class="container d-flex flex-column gap-2" id="recipe-container">
        @if (!isAdmin)
        {
            <h2 class="collection-heading">Your Favourite Recipes</h2>
            <div id="favourite-recipes">
                <div class="row d-flex g-3 align-items-start p-1 flex-row flex-nowrap">
                    @{
                        foreach (var recipe in Model.FavouriteRecipes)
                        {
                            string recipeId = recipe.Id;
                            bool isInFavourites = await this.RecipeService.IsFavouriteRecipeForUserByIdAsync(recipeId, userId);

                            <div class="col d-block recipe-container">
                                <div class="card">
                                    <img class="card-img-top w-100 d-block fit-cover" alt="Recipe Image" src="@recipe.ImageUrl">
                                    <a class="add-to-favourites-button" onclick="toggleFavourites(event, '@recipeId', '@userId')">
                                        @if (isInFavourites)
                                        {
                                            <i class="fa fa-heart liked like-icon"></i>
                                            // <i class="fas fa-heart"></i>
                                        }
                                        else
                                        {
                                            <i class="fa fa-heart not-liked like-icon"></i>
                                            // <i class="far fa-heart"></i>
                                        }
                                    </a>
                                    <div class="card-body p-2">
                                        <div class="d-flex align-items-center justify-content-between">
                                            <div class="d-flex align-items-center justify-content-between gap-4">
                                                <div class="d-flex align-items-center justify-content-center g-1"><i class="material-icons card-icon">restaurant_menu</i><span class="icon-text">@recipe.Servings</span></div>
                                                <div class="d-flex align-items-center justify-content-center g-1"><i class="material-icons card-icon">timer</i><span class="icon-text">@recipe.CookingTime</span></div>
                                            </div><span class="badge bg-primary d-block">@recipe.Category.Name</span>
                                        </div>
                                        <h3 class="recipe-title">@recipe.Title</h3>
                                        <hr>
                                        <div class="recipe-description">
                                            <p class="card-text text-overflow-clamp">@recipe.Description</p>
                                        </div>
                                    </div>
                                    <span class="material-icons add-icon">add_circle</span>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        }

        <h2 class="collection-heading">@ownedRecipeHeading</h2>
        <div id="owned-recipes">
            <div class="row d-flex g-3 align-items-start p-1 no-wrap flex-row flex-nowrap">
                @foreach (var recipe in Model.OwnedRecipes)
                {
                    <div class="col recipe-container d-block">
                        <div class="card">
                            <img class="card-img-top w-100 d-block fit-cover" alt="Recipe Image" src="@recipe.ImageUrl">
                            <div class="card-body p-2">
                                <div class="d-flex align-items-center justify-content-between">
                                    <div class="d-flex align-items-center justify-content-between gap-4">
                                        <div class="d-flex align-items-center justify-content-center g-1"><i class="material-icons card-icon">restaurant_menu</i><span class="icon-text">@recipe.Servings</span></div>
                                        <div class="d-flex align-items-center justify-content-center g-1"><i class="material-icons card-icon">timer</i><span class="icon-text">@recipe.CookingTime</span></div>
                                    </div><span class="badge bg-primary d-block">@recipe.Category.Name</span>
                                </div>
                                <h3 class="recipe-title">@recipe.Title</h3>
                                <hr>
                                <div class="recipe-description">
                                    <p class="card-text text-overflow-clamp">@recipe.Description</p>
                                </div>
                            </div>
                            @if (!isAdmin)
                            {
                                <span class="material-icons add-icon">add_circle</span>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Like btn functionality
        function toggleFavourites(event, recipeId, userId) {
            event.preventDefault();
            var $button = $(event.currentTarget);
            let url = 'https://localhost:7279/api/favouriteRecipe/toggleFavourites';

            var data = {
                RecipeId: recipeId,
                UserId: userId
            }

            $.ajax({
                url: url,
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (response) {
                    // Handle success response
                    $button.find('i').toggleClass('liked not-liked');
                    toastr.success("Your preference is saved!");
                },
                error: function (xhr, status, error) {
                    // Handle error
                    if (xhr.status === 400) {
                        // Handle 400 Bad Request error
                        toastr.error('Bad Request: Please check your input and try again.');
                    } else {
                        // Display generic error message
                        toastr.error('Your preference not saved:', error);
                    }
                }
            });
        }
    </script>
}




