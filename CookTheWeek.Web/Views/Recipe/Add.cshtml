@model RecipeAddFormModel
@inject IUserContext UserContext
@using Newtonsoft.Json
@using static CookTheWeek.Common.GeneralApplicationConstants;
@using static CookTheWeek.Common.EntityValidationConstants.ValidationErrorMessages;
@using static CookTheWeek.Common.EntityValidationConstants.ValidationConstants;
@{
    PageHeadingViewModel headingModel = new PageHeadingViewModel
    {
        Subheading = ViewData["Title"]!.ToString()

    };

    Guid userId = UserContext.UserId;
    bool isAdmin = UserContext.IsAdmin;

    if (userId != default && !isAdmin)
    {
        headingModel.HeadingSecondary = "Save your favorite recipes in your personal collection";
    } 
    
    var qtyFractionOptionsString = JsonConvert.SerializeObject(QtyFractionOptions);
    var errorMessagesString = JsonConvert.SerializeObject(RecipeValidationErrorMessages);
    var validationConstantsString = JsonConvert.SerializeObject(RecipeValidationConstants);

    var serverErrorsString = TempData["ServerErrors"] != null
        ? JsonConvert.DeserializeObject<Dictionary<string, string[]>>(TempData["ServerErrors"].ToString())
        : new Dictionary<string, string[]>();
}

<div id="add-recipe">
    <div class="card-outer-container">
        <partial name="_HeadingSmallPartial" model="headingModel" />

        <div class="card">
            <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs" id="recipe" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="info-tab" data-bs-toggle="tab" data-bs-target="#info" type="button" role="tab" aria-controls="info" aria-selected="true">Recipe Details</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="ingredients-tab" data-bs-toggle="tab" data-bs-target="#ingredients" type="button" role="tab" aria-controls="ingredients" aria-selected="false">Ingredients</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="instructions-tab" data-bs-toggle="tab" data-bs-target="#instructions" type="button" role="tab" aria-controls="instructions" aria-selected="false">Instructions</button>
                    </li>
                </ul>
                <a id="backBtn" href="@(!string.IsNullOrEmpty(ViewBag.ReturnUrl) ? ViewBag.ReturnUrl : Url.Action("Home", "Index"))" class="card-back-button">
                    <i class="fa-solid fa-angles-left"></i>
                </a>
            </div>

            <div class="card-body">
                <form id="add-recipe-form" method="post" data-bind="submit: submitForm" asp-area="" asp-controller="Recipe" asp-action="Add" asp-route-returnUrl="@ViewBag.ReturnUrl">
                    <div id="info-content" class="tab-content g-3">
                        <!-- TAB RECIPE DETAILS -->
                        <div class="tab-pane fade show active" id="info" role="tabpanel" aria-labelledby="info-tab">
                            <!-- FIRST ROW -->
                            <div class="row">
                                <div class="col col-12 col-md-9 p-2">
                                    <div class="input-group">
                                        <span class="input-group-text">Title</span>
                                        <input asp-for="Title"
                                               data-bind="value: Title"
                                               class="form-control"
                                               placeholder="Name it.."
                                               type="text" />
                                    </div>
                                    <span class="small text-danger"
                                          data-bind="validationMessage: Title">
                                    </span>
                                </div>
                                <div class="col col-12 col-md-3 p-2">
                                    <div class="input-group">
                                        <span class="input-group-text">Servs</span>
                                        <select class="form-select"
                                                asp-for="Servings"
                                                data-bind="value: Servings, valueUpdate: 'afterkeydown'">
                                            <option value="">Choose</option>
                                            @foreach (var option in @Model.ServingsOptions!)
                                            {
                                                <option value="@option">@option</option>
                                            }
                                        </select>
                                    </div>
                                    <span data-bind="validationMessage: Servings"
                                          class="small text-danger">
                                    </span>
                                </div>
                            </div>
                            <!-- SECOND ROW -->
                            <div class="row">
                                <!-- MEAL TYPE -->
                                <div class="col col-12 col-md-5 p-2">
                                    <div class="input-group">
                                        <span class="input-group-text">Meal Type</span>
                                        <select asp-for="RecipeCategoryId"
                                                data-bind="value: RecipeCategoryId, valueUpdate: 'afterkeydown'"
                                                class="form-select">
                                            <option value="">Choose</option>
                                            @foreach (var category in @Model.Categories!)
                                            {
                                                <option value="@category.Id">@category.Name</option>
                                            }
                                        </select>
                                    </div>
                                    <span data-bind="validationMessage: RecipeCategoryId"
                                          class="small text-danger">
                                    </span>
                                </div>
                                <!-- COOKING TIME -->
                                <div class="col col-12 col-md-3 p-2">
                                    <div class="input-group">
                                        <span class="input-group-text">Ready For</span>
                                        <input asp-for="CookingTimeMinutes"
                                               data-bind="value: CookingTimeMinutes, valueUpdate: 'afterkeydown'"
                                               class="form-control"
                                               placeholder="minutes"
                                               type="number" />
                                    </div>
                                    <span data-bind="validationMessage: CookingTimeMinutes"
                                          class="small text-danger">
                                    </span>
                                </div>
                                <!-- DIFFICULTY LEVEL -->
                                <div class="col col-12 col-md-4 p-2">
                                    <div class="input-group">
                                        <span class="input-group-text">Difficulty</span>
                                        <select asp-for="DifficultyLevelId"
                                                data-bind="value: DifficultyLevelId,
                                                               optionsCaption: 'Pick one: (optional)',
                                                               optionsText: 'Name',
                                                               optionsValue: 'Id',
                                                               options: DifficultyLevels"
                                                class="form-select">
                                        </select>
                                    </div>
                                    <span class="small text-danger"
                                          data-bind="validationMessage: DifficultyLevelId">
                                    </span>
                                </div>
                            </div>
                            <!-- THIRD ROW -->
                            <!-- DESCRIPTION, RECIPE TAGS AND ADDITIONAL RECIPE INFO -->
                            <div class="row">
                                <div class="col col-12 col-md-4 p-2">
                                    <div class="input-group">
                                        <span class="input-group-text">Tags</span>
                                        <select asp-for="SelectedTagIds"
                                               data-bind="selectedOptions: SelectedTagIds,
                                                                optionsCaption: 'Pick Recipe Tags: (optional)',
                                                                optionsText: 'Name',
                                                                optionsValue: 'Id',
                                                                options: AvailableTags"
                                                class="form-select" size="22" multiple>
                                        </select>
                                    </div>
                                    <span class="small text-danger"
                                          data-bind="validationMessage: SelectedTagIds">
                                    </span>
                                </div>

                                <div class="col col-12 col-md-8 p-2">
                                    <div class="input-group">
                                        <span class="input-group-text">Description</span>
                                        <textarea asp-for="Description"
                                                  data-bind="value: Description"
                                                  rows="17"
                                                  class="form-control"
                                                  placeholder="Would be great to know more about this recipe.."></textarea>
                                    </div>
                                    <span class="small text-danger"
                                          data-bind="validationMessage: Description">
                                    </span>
                                </div>
                            </div>
                            
                            <!-- FOURTH ROW (IMG) -->
                            <div class="row">
                                <div class="col col-12 p-2">
                                    <div class="input-group">
                                        <span class="input-group-text">Image URL</span>
                                        <input asp-for="ImageUrl"
                                               data-bind="value: ImageUrl"
                                               class="form-control"
                                               placeholder="Your image link here..."
                                               type="url" />
                                    </div>
                                    <span data-bind="validationMessage: ImageUrl"
                                          class="small text-danger">
                                    </span>
                                </div>                                

                            </div>
                        </div>
                        <!-- TAB INSTRUCTIONS -->
                        <div class="tab-pane fade" id="instructions" role="tabpanel" aria-labelledby="instructions-tab">
                            <div id="instructions-content" class="tab-content">
                                <div id="instructionsContainer">
                                    <div id="instructionsList" data-bind="foreach: Steps">

                                        <div class="row instructions-row">
                                            <div class="col p-2">
                                                <div class="input-group">
                                                    <span class="input-group-text">Step</span>
                                                    <textarea data-bind="value: Description,
                                                                     attr: { name: 'Steps[' + $index() + '].Description' },
                                                                     deferValidation: Description"
                                                              class="form-control"
                                                              rows="3" placeholder="Tell us how to cook..">
                                                </textarea>
                                                </div>
                                                <span data-bind="validationMessage: Description"
                                                      class="small text-danger">
                                                </span>
                                            </div>
                                            <div class="col-auto d-flex align-items-center p-2">
                                                <div class="add-step-btn-container d-flex justify-content-center align-items-center adjust-btn-position">
                                                    <button class="remove-item-button" type="button" data-bind="click: $parent.removeStep">
                                                        <i class="fa fa-minus" aria-hidden="true"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <!-- Add Step Btn -->
                                    <div class="row mt-3">
                                        <div class="col-6 offset-6 d-flex align-items-center justify-content-end">
                                            <a id="add-step" class="add-step-btn" data-bind="click: addStep">
                                                <i class="fa-solid fa-square-plus"></i> Add step
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- TAB INGREDIENTS -->
                        <div class="tab-pane fade" id="ingredients" role="tabpanel" aria-labelledby="ingredients-tab">
                            <div id="ingredients-content" class="tab-content">
                                <div id="ingredientsContainer">
                                    <div id="ingredientList" data-bind="foreach: RecipeIngredients">
                                        <!-- USING KNOCKOUTJS DATA BINDING -->
                                        <div class="row ingredient-row">
                                            <div class="col col-6 col-lg-4 p-2">
                                                <div class="input-group">
                                                    <span class="input-group-text">Ingredient</span>
                                                    <input data-bind="value: Name,
                                                                  validationElement: Name,
                                                                  attr: { name: 'RecipeIngredients[' + $index() + '].Name' },
                                                                  deferValidation: Name"
                                                           class="form-control ingredientName"
                                                           type="text"
                                                           placeholder="Start typing.."
                                                           autocomplete="off" />
                                                    <div class="suggestionsList invisible">
                                                    </div>
                                                    <input type="hidden"
                                                           data-bind="value: IngredientId,
                                                                  attr: { name: 'RecipeIngredients[' + $index() + '].IngredientId' },
                                                                  deferValidation: IngredientId"
                                                           class="ingredientId" />
                                                </div>
                                                <span data-bind="validationMessage: IngredientId"
                                                      class="small text-danger">
                                                </span>
                                            </div>
                                            <!-- COMPLEX QUANTITY INPUT -->
                                            <div class="col col-6 col-lg-3 qty-row p-2">
                                                <!--  DECIMAL INPUT -->
                                                <div class="decimal-qty-input" data-bind="style: { display: showFractionsDiv() ? 'none' : 'block'}">
                                                    <div class="input-group flex-inside">
                                                        <span class="input-group-text">Qty</span>
                                                        <input type="number"
                                                               min="0.001"
                                                               max="9999.999"
                                                               step="any"
                                                               data-bind="value: Qty().QtyDecimal,
                                                                  validationElement: Qty().QtyDecimal,
                                                                  attr: { name: 'RecipeIngredients[' + $index() + '].Qty.QtyDecimal' },
                                                                  valueUpdate: 'afterkeydown'"
                                                               class="form-control qty-decimal"
                                                               placeholder="0.00" />
                                                    </div>
                                                    <span data-bind="validationMessage: Qty().QtyDecimal"
                                                          class="small text-danger">
                                                    </span>
                                                </div>
                                                <!-- FRACTIONAL / WHOLE NUMBER INPUT -->
                                                <div data-bind="style: { display: showFractionsDiv() ? 'block' : 'none' }"
                                                     class="fraction-qty-inputs">
                                                    <div class="input-group flex-inside">
                                                        <span class="input-group-text">Qty</span>
                                                        <input type="number"
                                                               data-val="true"
                                                               data-bind="value: Qty().QtyWhole,
                                                                  validationElement: Qty().QtyWhole,
                                                                  attr: { name: 'RecipeIngredients[' + $index() + '].Qty.QtyWhole' },
                                                                  valueUpdate: 'afterkeydown'"
                                                               class="form-control qty qty-whole"
                                                               placeholder="0" />
                                                        <select data-val="true"
                                                                data-bind="value: Qty().QtyFraction,
                                                                   validationElement: Qty().QtyFraction,
                                                                   attr: { name: 'RecipeIngredients[' + $index() + '].Qty.QtyFraction' },
                                                                   valueUpdate: 'afterkeydown'"
                                                                class="form-select qty qty-fraction">
                                                            <option value="">Frac</option>
                                                            @foreach (var option in QtyFractionOptions)
                                                            {
                                                                <option value="@option.Key">@option.Key</option>
                                                            }
                                                        </select>
                                                    </div>
                                                    <span data-bind="validationMessage: Qty().QtyFraction" class="small text-danger"></span>
                                                    <span data-bind="validationMessage: Qty().QtyWhole" class="small text-danger"></span>
                                                </div>

                                                <!-- INPUT SWITCHER -->
                                                <div class="form-check form-switch">
                                                    <input type="checkbox"
                                                           class="form-check-input show-fraction-checkbox"
                                                           data-bind="click: switchQtyUnit, checked: isChecked" />
                                                    <label class="form-check-label">Use Fractions</label>
                                                </div>
                                            </div>
                                            <div class="col col-5 col-lg-2 p-2">
                                                <div class="input-group">
                                                    @* <span class="input-group-text">Unit</span> *@
                                                    <select name="RecipeIngredients[<span data-bind='text: $index()'></span>].MeasureId"
                                                            data-bind="value: MeasureId,
                                                                   validationElement: MeasureId,
                                                                   attr: { name: 'RecipeIngredients[' + $index() + '].MeasureId' },
                                                                   deferValidation: MeasureId,
                                                                   valueUpdate: 'afterkeydown'"
                                                            class="form-select"
                                                            aria-label="Unit">
                                                        <option value="" disabled selected>Unit</option>
                                                        @foreach (var measure in @Model.RecipeIngredients!.First().Measures!)
                                                        {
                                                            <option value="@measure.Id">@measure.Name</option>
                                                        }
                                                    </select>
                                                </div>
                                                <span data-bind="validationMessage: MeasureId"
                                                      class="small text-danger">
                                                </span>
                                            </div>
                                            <div class="col col-5 col-lg-2 p-2">
                                                <div class="input-group">
                                                    @* <span class="input-group-text">Note</span> *@
                                                    <select data-bind="value: SpecificationId,
                                                               attr: {name: 'RecipeIngredients[' + $index() + '].SpecificationId' },
                                                               valueUpdate: 'afterkeydown'"
                                                            aria-label="Note"
                                                            class="form-select">
                                                        <option value="" disabled selected>Note</option>
                                                        @foreach (var specification in Model.RecipeIngredients!.First().Specifications!)
                                                        {
                                                            <option value="@specification.Id">@specification.Name</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col col-2 col-lg-1 p-2 d-flex justify-content-center align-items-top adjust-btn-position">
                                                <a data-bind="click: $parent.removeIngredient"
                                                   class="remove-item-button">
                                                    <i class="fa fa-minus" aria-hidden="true"></i>
                                                </a>
                                            </div>
                                        </div>
                                        <hr>
                                    </div>
                                    <!-- Add Ingredient Btn -->
                                    <div class="row mt-3">
                                        <div class="col-6 offset-6 d-flex align-items-center justify-content-end">
                                            <a data-bind="click: addIngredient"
                                               id="add-ingredient"
                                               class="add-ingredient-btn"
                                               type="button">
                                                <i class="fa-solid fa-square-plus"></i> Add Ingredient
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col buttons justify-content-center">
                        <!-- SUBMIT FORM BTN -->
                        <button id="add-recipe-button"
                                form="add-recipe-form"
                                class="add-recipe-button"
                                type="submit">
                            <span class="btn-text">Add Recipe</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>


@section Scripts {
    <partial name="_KnockoutPartial.cshtml" />
    <script src="~/js/suggestions.js"></script>
    <script type="module">
        import { AddRecipeViewModel } from '/js/ko-addRecipe-viewModel.js';

        $(document).ready(function () {

            // Reset the form if the page is loaded from cache (e.g., when pressing back/forward buttons)
            window.onpageshow = function (event) {
                if (event.persisted || window.performance && window.performance.navigation.type === 2) {
                    $('form')[0].reset();  
                }
            };

            // Parse the QtyFractionOptions from the JSON string
            var qtyFractionOptions = @Html.Raw(qtyFractionOptionsString);
            const errorMessages = @Html.Raw(errorMessagesString);
            const validationConstants = @Html.Raw(validationConstantsString);

            // Create Regex URL pattern, corresponding to server-side regex
            const ValidationConstants = {
                UrlPattern: /^(http(s)?:\/\/)?([a-zA-Z0-9-]+\.)+[a-zA-Z]{2,}(:[0-9]{1,5})?(\/.*)?$/
            };
            // Register URL validation rule
            ko.validation.rules['url'] = {
                validator: function (val, validate) {
                    if (!val || !validate) return true;
                    return ValidationConstants.UrlPattern.test(val);
                },
                message: errorMessages.ImageInvalidErrorMessage
            };

            ko.validation.registerExtenders();

            // Initialize the ViewModel with the initial data
            const initialData = @Html.Raw(JsonConvert.SerializeObject(Model));
            const serverErros = @Html.Raw(JsonConvert.SerializeObject(serverErrorsString));

            var viewModel = new AddRecipeViewModel(initialData, serverErros, errorMessages, qtyFractionOptions, validationConstants);

            // // Configure Knockout Validation plugin
            ko.validation.init({
                insertMessages: false,
                decorateElement: false,
                errorElementClass: 'error',
                parseInputAttributes: true,
                messagesOnModified: true,
                errorMessageClass: "small text-danger",
            }, true);

            ko.applyBindings(viewModel);

            if (Object.keys(viewModel.ServerErrors).length > 0) {
                viewModel.applyServerErrors();                
            }
           
        });
    </script>
    
 }