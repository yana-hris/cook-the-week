@model RecipeAddFormModel
@{
    ViewData["Title"] = "Add Recipe";
    int nextIndex = Model.RecipeIngredients.Count;

}
<div id="add-recipe">
    <h2 class="text-center pt-5 fw-semibold">Add Recipe</h2>
    <div class="card">
        <div class="card-header">
            <ul class="nav nav-tabs card-header-tabs" id="recipe" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="info-tab" data-bs-toggle="tab" data-bs-target="#info" type="button" role="tab" aria-controls="info" aria-selected="true">Recipe Details</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="ingredients-tab" data-bs-toggle="tab" data-bs-target="#ingredients" type="button" role="tab" aria-controls="ingredients" aria-selected="false">Ingredients</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="instructions-tab" data-bs-toggle="tab" data-bs-target="#instructions" type="button" role="tab" aria-controls="instructions" aria-selected="false">Instructions</button>
                </li>
            </ul>
        </div>
        
        <div class="card-body">
            <form id="add-recipe-form" method="post" asp-area="" asp-controller="Recipe" asp-action="Add">
                <div id="info-content" class="tab-content">
                @* TAB RECIPE DETAILS *@
                    <div class="tab-pane fade show active" id="info" role="tabpanel" aria-labelledby="info-tab">
                        <div class="row g-3">
                            <div class="col col-12 col-md-8 col-xl-9 p-3">
                                <div class="input-group">
                                    <span class="input-group-text">Title</span>
                                    <input asp-for="Title" class="form-control" placeholder="Name it.." type="text">
                                    <span asp-validation-for="Title" class="small text-danger"></span>
                                </div>
                            </div>
                            <div class="col col-12 col-md-4 col-xl-3 p-3">
                                <div class="input-group">
                                    <span class="input-group-text">Servs</span><select class="form-control" asp-for="Servings">
                                        <option value="">Choose</option>
                                        @foreach (var option in @Model.ServingsOptions)
                                        {
                                            <option value="@option">@option</option>
                                        }
                                    </select>
                                    <span asp-validation-for="Servings" class="small text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row g-3">
                            <div class="col col-12 col-md-7 col-xl-8 p-3">
                                <div class="input-group">
                                    <span class="input-group-text">Description</span>
                                    <textarea asp-for="Description" rows="3" class="form-control" placeholder="What it is.."></textarea>
                                    <span asp-validation-for="Description" class="small text-danger"></span>
                                </div>
                            </div>
                            <div class="col col-12 col-md-5 col-xl-4 p-3">
                                <div class="input-group"><span class="input-group-text">Ready For</span>
                                    <input asp-for="CookingTimeMinutes" class="form-control" type="number">
                                    <span asp-validation-for="CookingTimeMinutes" class="small text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row g-3">
                            <div class="col col-12 col-md-6 col-xl-7 p-3">
                                <div class="input-group">
                                    <span class="input-group-text">Image URL</span>
                                    <input asp-for="ImageUrl" class="form-control" placeholder="Your fine URL here..." type="url">
                                    <span asp-validation-for="ImageUrl" class="small text-danger"></span>
                                </div>
                            </div>
                            <div class="col col-12 col-md-6 col-xl-5 p-3">
                                <div class="input-group">
                                    <span class="input-group-text">Meal Type</span>
                                    <select asp-for="RecipeCategoryId" class="form-control">
                                        <option value="">Choose</option>
                                        @foreach (var category in @Model.Categories!)
                                        {
                                            <option value="@category.Id">@category.Name</option>
                                        }
                                    </select>
                                    <span asp-validation-for="RecipeCategoryId" class="small text-danger"></span>
                                </div>
                            </div>

                        </div>
                    </div>
                   @*  TAB INSTRUCTIONS *@
                    <div class="tab-pane fade" id="instructions" role="tabpanel" aria-labelledby="instructions-tab">
                        <div class="row g-3">
                            <div class="col col-12 p-3">
                                <div class="input-group">
                                    <span class="input-group-text">Instructions</span>
                                    <textarea asp-for="Instructions" class="form-control" rows="12" placeholder="Your steps how to cook.."></textarea>
                                    <span asp-validation-for="Instructions" class="small text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    @* TAB INGREDIENTS *@
                    <div class="tab-pane fade" id="ingredients" role="tabpanel" aria-labelledby="ingredients-tab">
                        <div id="ingredients" class="tab-content">
                            <div id="ingredientsContainer" class="row">
                                <div id="ingredientList">
                                    @for (int i = 0; i < Model.RecipeIngredients.Count; i++)
                                    {
                                        <div class="row g-3 ingredient-row">
                                            <div class="col col-8 col-md-5 p-3">
                                                <div class="input-group">
                                                    <span asp-for="RecipeIngredients[i].Name" class="input-group-text">Ingredient</span>
                                                    <input asp-for="RecipeIngredients[i].Name" class="form-control ingredientName" type="text" autocomplete="off">
                                                    <div class="suggestionsList position-absolute invisible">
                                                    </div>
                                                    <span asp-validation-for="RecipeIngredients[i].Name" class="small text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col col-4 col-md-2 p-3">
                                                <div class="input-group">
                                                    <span class="input-group-text">Qty</span>
                                                    <input asp-for="RecipeIngredients[i].Qty" class="form-control" type="number">
                                                    <span asp-validation-for="RecipeIngredients[i].Qty" class="small text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col col-5 col-md-2 p-3">
                                                <div class="input-group">
                                                    <span class="input-group-text">Unit</span>
                                                       <select asp-for="RecipeIngredients[i].MeasureId" class="form-control">
                                                            <option value="">Unit</option>
                                                            @foreach (var measure in @Model.RecipeIngredients!.First().Measures!)
                                                            {
                                                                <option value="@measure.Id">@measure.Name</option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="RecipeIngredients[i].MeasureId" class="small text-danger"></span>
                                                </div>
                                            </div>
                                            <div class="col col-6 col-md-2 p-3">
                                                <div class="input-group">
                                                    <span class="input-group-text">Spec</span>
                                                    <select class="form-control" asp-for="RecipeIngredients[i].SpecificationId">
                                                        <option value="">Type</option>
                                                        @foreach (var specification in Model.RecipeIngredients!.First().Specifications!)
                                                        {
                                                            <option value="@specification.Id">@specification.Description</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col col-1 p-3">
                                                <div><button class="btn remove-btn btn-danger remove-ingredient" type="button">
                                                    <i class="far fa-minus-square" style="font-size: 25px;"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="row g-3">
                                    <div class="col col-12 p-3">
                                        <div class="input-group">
                                            <span class="input-group-text">
                                                <i class="far fa-plus-square"></i>
                                            </span>
                                            <button id="add-ingredient" class="btn btn-success" type="button">Add Ingredient</button></div>
                                    </div>
                                </div>
                        </div>
                    </div>
                </div>
                </div>
            </form>
        </div>
        <div class="card-footer">
            <div class="row">
                <div class="col text-center pt-3 pb-2">
                    @* SUBMIT FORM BTN *@
                    <button form="add-recipe-form" class="btn btn-primary btn-lg text-white" type="submit">Add Recipe</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
    <script>
        $('.ingredientName').on('keyup', suggestWords);
        function suggestWords() {
            let inputValue = $(this).val();
            $(this).next().empty();
            let contextForm = this;
            let suggestionsContainer = this.parentNode.querySelector("div.suggestionsList");

            if (inputValue.length > 1) {
                $.ajax({
                    url: 'https://localhost:7279/api/recipeingredient/suggestions',
                    type: "get",
                    data: {
                        input: inputValue
                    },
                    dataType: 'json',
                    success: function (response) {
                        renderSuggestionResults(response, inputValue, suggestionsContainer, contextForm);
                    }
                });
            } else {
                $(this).next().empty();
            }
        }
        function renderSuggestionResults(results, search, container, inputForm) {
            // delete unordered list from previous search result
            $(container).empty();
            
            // get properties from input field
            let form_font = window.getComputedStyle(inputForm, null).getPropertyValue('font-size');
            let form_width = inputForm.offsetWidth;

            //set result list to same width less borders
            container.style.width = form_width.toString() + 'px';

            if (results.length > 0) {
                // create ul and set classes
                let ul = document.createElement('UL');
                ul.classList.add('list-group', 'mt-2');

                // create list of results and append to ul
                results.map(function (item) {

                    let a = document.createElement('A');
                    a.classList.add('autocomplete-result', 'list-group-item', 'p-1'); // autocomplete used for init click event, other classes are from bootstrap
                    a.style.fontSize = form_font;
                    a.href = "#";
                    a.setAttribute("id", item.id); // used for click-Event to fill the form

                    // see function below - marked search string in results
                    a.innerHTML = colorResults(item.name, search);

                    // add Eventlistener for chosen renderResults
                    a.addEventListener("click", function (event) {
                        event.preventDefault();
                        event.stopPropagation();
                        // get text from list item and set it into reffered form field
                        let ingredientName = a.innerText;
                        let ingredientId = $(a).attr('id');

                        inputForm.value = ingredientName;
                        $('#addButton a.btn').attr("id", ingredientId.toString());

                        // after a result is chose, make the div with results invisible -> or after changing input content again,
                        // all of childs of current div will be deleted [line 48,49]
                        $(container).empty(); // NOT SURE!
                        container.classList.add('invisible');

                    });
                    ul.append(a);
                });

                // append ul to container and make container visible
                container.append(ul);
                container.classList.remove('invisible');

            }
            else {
                container.classList.add('invisible');

            }
        }
        // create span's with colored marked search strings
        function colorResults(string, search) {
            let splitted = string.toLowerCase().split(search.toLowerCase());

            let sp = []; // array of all spans, created in folling loop
            let start = 0; //start for slicing

            splitted.map(function (element, index) {
                // empty string at the beginning
                if (element == false) {
                    sp.push("<span class='text-success'>" + string.slice(start, start + search.length) + "</span>");
                    start = start + search.length;
                }
                else if (index + 1 == splitted.length) {
                    sp.push("<span>" + string.slice(start, start + element.length) + "</span>");
                }
                else {
                    sp.push("<span>" + string.slice(start, start + element.length) + "</span>");
                    start = start + element.length;
                    sp.push("<span class='text-success'>" + string.slice(start, start + search.length) + "</span>");
                    start = start + search.length;
                }
            });
            return sp.join('')
        }
    
    </script>
    <script>
        $(document).ready(function () {
            var ingredientIndex = @nextIndex;

            // TODO: Fix client-side validation for dynamically added input fields (input and select)
            $('#add-ingredient').click(function () {
                var newIngredientHtml = ` <div class="row g-3 ingredient-row">
             <div class="col col-8 col-md-5 p-3">
                 <div class="input-group">
                     <span class="input-group-text">Ingredient</span>

                                 <input id="RecipeIngredients_${ingredientIndex}__Name" class="ingredientName form-control" type="text" name="RecipeIngredients[${ingredientIndex}].Name" autocomplete="off" required />
                                 <div class="suggestionsList position-absolute invisible"></div>
                                 <span class="small text-danger" data-valmsg-for="RecipeIngredients[${ingredientIndex}].Name" data-valmsg-replace="true"></span>
                             </div></div>


         <div class="col col-4 col-md-2 p-3">
            <div class="input-group">
                                 <span class="input-group-text">Qty</span>
                                 <input id="RecipeIngredients_${ingredientIndex}__Qty" class="form-control" type="number" name="RecipeIngredients[${ingredientIndex}].Qty" required min="0.001" max="10000" />
                                 <span class="small text-danger" data-valmsg-for="RecipeIngredients[${ingredientIndex}].Qty" data-valmsg-replace="true"></span>
                             </div></div>


        <div class="col col-5 col-md-2 p-3">
            <div class="input-group">
                <span class="input-group-text">Unit</span>

                                 <select id="RecipeIngredients_${ingredientIndex}__MeasureId" class="form-control" name="RecipeIngredients[${ingredientIndex}].MeasureId" required>
                                     <option value="">Unit</option>`;
        @foreach (var measure in @Model.RecipeIngredients.First().Measures)
        {
            <text>newIngredientHtml += '<option value="@measure.Id">@measure.Name</option>'; </text>
        }
                    newIngredientHtml +=
                `</select>
                                  <span class="small text-danger" data-valmsg-for="RecipeIngredients[${ingredientIndex}].MeasureId" data-valmsg-replace="true">
                                  </span>
                             </div></div>


                        <div class="col col-6 col-md-2 p-3">
            <div class="input-group">
                <span class="input-group-text">Spec</span>
                                 <select id="RecipeIngredients_${ingredientIndex}__SpecificationId" class="form-control" name="RecipeIngredients[${ingredientIndex}].SpecificationId">
                                     <option value="">Type</option>`;
        @foreach (var specification in @Model.RecipeIngredients.First().Specifications)
        {
            <text>newIngredientHtml += '<option value="@specification.Id">@specification.Description</option>'; </text>
        }
                    newIngredientHtml +=
                `</select>
                             </div></div>
                                 <div class="col col-1 p-3">
                <div><button class="btn remove-btn btn-danger remove-ingredient" type="button">
                    <i class="far fa-minus-square" style="font-size: 25px;"></i>
                    </button>
                </div>
            </div>
        </div>`;

                $('#ingredientList').append(newIngredientHtml);
                ingredientIndex++;

                $('.ingredientName').on('keyup', suggestWords);
                $('form').validate().form();
            });

            $(document).on('click', '.remove-ingredient', function (event) {
                var ingredientCount = $('.ingredient-row').length;
                if (ingredientCount === 1) {
                    event.preventDefault();
                    toastr.error('At least one ingredient is required.');
                    return false;
                }
                $(this).closest('.ingredient-row').remove();
                ingredientIndex--;
                reindexIngredients();
            });

            function reindexIngredients() {
                $('.ingredient-row').each(function (index) {
                    var row = $(this);

                    // Update IDs and Names for visible input fields
                    row.find('[id]').each(function () {
                        var newId = this.id.replace(/\d+/, index);
                        $(this).attr('id', newId);
                    });
                    row.find('[name]').each(function () {
                        this.name = this.name.replace(/\[\d+\]/, '[' + index + ']');
                    });
                    row.find('.small[data-valmsg-for]').each(function () {
                        var propertyName = $(this).attr('data-valmsg-for').split('.')[1];
                        $(this).attr('data-valmsg-for', 'RecipeIngredients[' + index + '].' + propertyName);
                    });



                    // Update value attribute of hidden input field for Qty property
                    row.find('input[type="hidden"][name="__Invariant"]').attr('value', 'RecipeIngredients[' + index + '].Qty');
                });
                $('form').validate().form();
            }
        });

    </script>
}
