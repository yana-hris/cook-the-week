@model MealDetailsViewModel
@using static CookTheWeek.Common.HelperMethods.IngredientHelper;
@{
    var headingModel = new PageHeadingViewModel
            {
                Subheading = "Meal Details",
                HeadingSecondary = $"{Model.Title} for {Model.ServingSize}"
            };

    int mealId = Model.Id;
}
<div id="meal-cook-container">
    <div class="card-outer-container">
        <partial name="_HeadingSmallPartial" model="headingModel" />
        @Html.AntiForgeryToken()

        <div class="card">
            <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs">
                    <li class="nav-item"><a class="nav-link active" id="info-tab" data-bs-toggle="tab" data-bs-target="#info" type="button" role="tab" aria-controls="info" aria-selected="true"><span>Info</span></a></li>
                    <li class="nav-item"><a class="nav-link" id="ingredients-tab" data-bs-toggle="tab" data-bs-target="#ingredients" type="button" role="tab" aria-controls="ingredients" aria-selected="false"><span>Ingredients</span></a></li>
                    <li class="nav-item"><a class="nav-link" id="instructions-tab" data-bs-toggle="tab" data-bs-target="#instructions" type="button" role="tab" aria-controls="instructions" aria-selected="false">Instructions</a></li>
                </ul>
                <a id="backBtn" href="@(!string.IsNullOrEmpty(ViewBag.ReturnUrl) ? ViewBag.ReturnUrl : Url.Action("MealPlan", "Mine"))" class="card-back-button">
                    <i class="fa-solid fa-angles-left"></i>
                </a>
            </div>

            <div class="card-body" id="meal-details">
                <div id="info-content" class="tab-content g-3">
                    <div class="tab-pane fade show active" id="info" role="tabpanel" aria-labelledby="info-tab">
                        <div class="row g-0">
                            <div class="col-12">
                                <div class="img-container">
                                    <img class="img-fluid image" alt="Meal Image" src="@Model.ImageUrl">
                                    <div class="button-container">
                                    @if (!Model.IsMealPlanFinished && !Model.IsCooked)
                                    {
                                        <button class="meal-button cook-meal-button"
                                                data-meal-id="@Model.Id"
                                                data-bs-toggle="tooltip"
                                                data-bs-placement="top"
                                                title="Mark as Cooked">
                                                <i class="fa-solid fa-bowl-food"></i>
                                        </button>
                                    }
                                    else if(!Model.IsMealPlanFinished && Model.IsCooked)
                                    {
                                        <button class="meal-button uncook-meal-button"
                                                data-meal-id="@Model.Id"
                                                data-bs-toggle="tooltip"
                                                data-bs-placement="top"
                                                title="Mark Uncooked">
                                                <i class="fa-solid fa-check"></i>
                                            </button>
                                    }
                                    else if (Model.IsMealPlanFinished && Model.IsCooked)
                                    {
                                        <span class="cooked-meal-icon">
                                            <i class="fa-solid fa-check"></i>
                                        </span>

                                    }
                                    else
                                    {
                                        <span class="not-cooked-meal-icon">
                                            <i class="fa-solid fa-xmark"></i>
                                        </span>
                                    }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row row-cols-1 row-cols-sm-2 features-row">
                            <div class="col d-flex align-items-center">
                                <span class="icon-container me-2">
                                    <i class="fa-solid fa-list"></i>
                                </span>
                                <span class="list-item-content">
                                    <span class="item-decription me-2">Type: </span>
                                    <span class="item-value">@Model.CategoryName</span>                                    
                                </span>
                            </div>                          
                            @if(@Model.DifficultyLevel != string.Empty)
                            {
                            <div class="col d-flex align-items-center">
                                <span class="icon-container me-2">
                                    <i class="fas fa-layer-group"></i>
                                </span>
                                <span class="list-item-content">
                                    <span class="item-decription me-2">Difficulty level: </span>
                                    <span class="item-value">@Model.DifficultyLevel</span> 

                                </span>
                            </div>
                            }                            
                            <div class="col d-flex align-items-center">
                                <span class="icon-container me-2">
                                    <i class="fa-solid fa-stopwatch"></i>
                                </span>
                                <span class="list-item-content">
                                    <span class="item-decription me-2">Duration: </span>
                                    <span class="item-value">@Model.CookingTime</span>
                                </span>
                            </div>
                            <div class="col d-flex align-items-center">
                                <span class="icon-container me-2">
                                    <i class="fa-solid fa-utensils"></i>
                                </span>
                                <span class="list-item-content">
                                    <span class="item-decription me-2">Size: </span>
                                    <span class="item-value">@Model.ServingSize portions</span>
                                </span>
                            </div>
                            <div class="col d-flex align-items-center">
                                <span class="icon-container me-2">
                                    <i class="fa-solid fa-calendar-plus"></i>
                                </span>
                                <span class="list-item-content">                                    
                                    <span class="item-decription me-2">Cook date: </span>
                                    <span class="item-value">@Model.CookingDate</span>
                                </span>
                            </div>
                            
                            
                            <div class="col d-flex align-items-center">
                                <span class="icon-container me-2">
                                    <i class="fas fa-shopping-cart"></i>
                                </span>
                                <span class="list-item-content">
                                    <span class="item-decription me-2">Ingredients: </span>
                                    <span class="item-value">@Model.IngredientsByCategories.Sum(category => category.SupplyItems.Count)</span>
                                </span>
                            </div>
                            
                        </div>
                        
                        <div class="row mt-2 mb-4">
                            <div class="newspaper-column">
                            @if (Model.Description != default)
                            {
                                <p class="recipe-description">@Html.Raw(Model.Description.Replace("\n", "<br>"))</p>
                            }
                            </div>
                        </div>
                                                
                    </div>
                    <div id="ingredients" class="tab-pane fade" role="tabpanel" aria-labelledby="ingredients-tab">
                        <div class="row g-1">
                            <div class="col-12 mb-3">
                                <h5 class="meal-title">For @Model.ServingSize servings</h5>
                            </div>
                            @foreach (var category in Model.IngredientsByCategories)
                            {
                                if (category.SupplyItems.Count > 0)
                                {
                                    <div class="col col-12 col-sm-6 col-lg-4">
                                        <p class="ingredient-heading">@category.Title</p>
                                        <ul class="list-unstyled">
                                            @foreach (var item in category.SupplyItems)
                                            {
                                                <li>@Html.Raw(item.Qty) <span class="units-styler">@item.Measure</span> @item.Name <span class="units-styler">@item.Specification</span></li>
                                            }
                                        </ul>
                                    </div>
                                }
                            }

                        </div>
                    </div>
                    <div id="instructions" class="tab-pane fade" role="tabpanel" aria-labelledby="instructions-tab">
                        <div class="steps-container">
                            @for (int i = 0; i < Model.CookingSteps.Count; i++)
                            {
                                string currentStepText = Model.CookingSteps[i].Description;
                                <div class="step-wrapper">

                                    <div class="step-number">@(i + 1)</div>

                                    <div class="col">@Html.Raw(currentStepText.Replace("\n", "<br>"))</div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/mealFunctions.js"></script>
    <script>
        $(document).ready(function () {
            const $button = $('.meal-button');
            const mealId = $button.data('meal-id');
            $button.tooltip();

            if($button.hasClass('cook-meal-button')) {
                $button.on('click', function(event) {
                    event.preventDefault();
                    event.stopPropagation();


                    cookMeal($button, mealId);
                })
            } else if ($button.hasClass('uncook-meal-button')) {
                $button.on('click', function (event) {
                    event.preventDefault();
                    event.stopPropagation();

                    unCookMeal($button, mealId);
                });
            }

        });
    </script>
}
