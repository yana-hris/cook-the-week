@model AllUsersQueryModel
@using CookTheWeek.Web.Infrastructure.Middlewares
@using static CookTheWeek.Common.GeneralApplicationConstants
@{
    ViewBag.Title = "All Users";

    var adminHeading = new PageHeadingViewModel
    {
        Subheading = "All Users",
        HeadingSecondary = "Browse & manage users"
    };
}
<div class="wide-contents-container" id="admin">
    <partial name="_HeadingPartial" model="adminHeading"/>

    <div class="row text-center filter-container fix-padding">
        <form id="all-users-form" method="get">
            <div class="row align-items-center justify-content-between gx-3">
               
                <!-- Search -->
                <div class="col-12 col-md-6">
                    <div class="input-group searchBox">
                        <span class="input-group-text"><i class="fa-solid fa-magnifying-glass"></i></span>
                        <input asp-for="SearchString"
                               class="form-control search"
                               placeholder="Search By Username or Email..."
                               autocomplete="off" />
                        <button type="submit" value="Search" class="search-btn" form="all-users-form"><i class="fa-solid fa-filter"></i></button>
                       
                    </div>
                </div>

                <!-- Sorting DropDown -->
                <div class="col col-12 col-md-3">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fa-solid fa-arrow-down-wide-short"></i></span>
                        <select asp-for="UserSorting" class="form-select">
                            <option value="">Order By</option>
                            @foreach (var sorting in Model.UserSortings)
                            {
                                <option value="@sorting.Id">@sorting.Name</option>
                            }
                        </select>
                    </div>
                </div>

                
                <div class="col col-12 col-md-3">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fa-solid fa-table-cells-large"></i></span>
                        <select asp-for="UsersPerPage" class="form-select">
                            @foreach (var perPage in AdminPerPageOptions)
                            {
                                <option value="@perPage">@perPage</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        </form>
    </div>

   
    <table class="table table-striped">
        <thead>
            <tr>
                <th><label><i class="fa-solid fa-id-card"></i> Id</label></th>
                <th><label><i class="fa-solid fa-user"></i> Username</label></th>
                <th><label><i class="fa-solid fa-at"></i> Email</label></th>
                <th><label><i class="fa-solid fa-folder"></i> Recipes</label></th>
                <th><label><i class="fa-solid fa-clipboard-list"></i> Meal Plans</label></th>
                <th><label><i class="fa-solid fa-plug"></i> Online</label></th>
                <th><label><i class="fa-solid fa-key"></i> Password</label></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td><label>@user.Id</label></td>
                    <td><label>@user.Username</label></td>
                    <td><label>@user.Email</label></td>
                    <td>
                        @Html.Raw(user.TotalRecipes == 0 ? " <label class=\"no\">❌</label>" : $"<label>{user.TotalRecipes}</label>")
                    </td>
                    <td>
                        @Html.Raw(user.TotalMealPlans == 0 ? " <label class=\"no\">❌</label>" : $"<label>{user.TotalMealPlans}</label>")
                    </td>
                    <td>
                        @Html.Raw(OnlineUsersMiddleware.CheckIfUserIsOnline(user.Id) ? "<label class=\"yes\">✔</label>" : "<label class=\"no\">❌</label>")
                       
                    </td>
                    <td>
                        @Html.Raw(user.HasPassword ? "<label class=\"yes\">✔</label>" : "<label class=\"no\">❌</label>")
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @{
        int maxPage = (int)Math.Ceiling((double)Model.TotalUsers / Model.UsersPerPage);
        int previousPage = Model.CurrentPage - 1;
        int nextPage = Model.CurrentPage + 1;

        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage || (!Model.Users.Any());
        bool shouldPreviousPageBeDisabled = Model.CurrentPage == 1;
    }
    <!-- Pagination buttons -->
    @if (Model.TotalUsers > Model.UsersPerPage)
    {
        <div aria-label="Page navigation" id="pagination-buttons">
            <ul class="pagination d-flex justify-content-end align-items-center">
                <li class="page-item">
                    <a class="pagination-btn @(shouldPreviousPageBeDisabled ? "disabled" : string.Empty)"
                       asp-area="Admin"
                       asp-controller="UserAdmin"
                       asp-action="All"
                       asp-route-currentPage="@previousPage"
                       asp-route-usersPerPage="@Model.UsersPerPage"
                       asp-route-userSorting="@(Model.UserSorting ?? 0)"
                       asp-route-searchString="@Model.SearchString"
                       aria-disabled="@(shouldPreviousPageBeDisabled ? true : false)">
                        <i class="fa-solid fa-angles-left"></i>
                    </a>
                </li>

                <li class="page-item">
                    <a class="pagination-btn @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
                       asp-area="Admin"
                       asp-controller="UserAdmin"
                       asp-action="All"
                       asp-route-currentPage="@nextPage"
                       asp-route-usersPerPage="@Model.UsersPerPage"
                       asp-route-userSorting="@(Model.UserSorting ?? 0)"
                       asp-route-searchString="@Model.SearchString"
                       aria-disabled="@(shouldNextPageBeDisabled ? true : false)">
                        <i class="fa-solid fa-angles-right"></i>
                    </a>
                </li>
            </ul>
        </div>
    }
</div>
