@model AllIngredientsQueryModel
@using static CookTheWeek.Common.GeneralApplicationConstants
@{
    ViewData["Title"] = "All Ingredients";
}

<div class="container">
    <h2 class="text-center">@ViewData["Title"]</h2>
    <hr />
    <div class="container pt-2">
        <form method="get" class="pb-4">
            <div class="row justify-content-between align-items-center">
                <div class="col-sm-3">
                    <div class="form-group">
                        <label asp-for="CategoryId" class="form-label">Category</label>
                        <select asp-for="CategoryId" class="form-select">
                            <option value="">All</option>
                            @foreach (var category in Model.Categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-sm-5">
                    <div class="form-group">
                        <label asp-for="SearchString" class="form-label">Search</label>
                        <input asp-for="SearchString" class="form-control" placeholder="..." />
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        <label asp-for="IngredientSorting" class="form-label">Sort By</label>
                        <select asp-for="IngredientSorting" class="form-select sort">
                            @foreach (var sorting in Model.IngredientSortings)
                            {
                                string sortText = @sorting.Name
                                .Replace("Ascending", "")
                                .Replace("Descending", "");
                                
                                <option value="@sorting.Id">
                                @sortText                                
                                </option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-sm-auto">
                    <div class="row align-items-end">
                        <div class="col-sm-6">
                            <div class="form-group mb-0">
                                <label asp-for="IngredientsPerPage" class="form-label">Per Page</label>
                                <select asp-for="IngredientsPerPage" class="form-select">
                                    @foreach (var perPage in AdminPerPageOptions)
                                    {
                                        <option value="@perPage">@perPage</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group mb-0 d-flex justify-content-end">
                                <button type="submit" value="Search" class="btn btn-primary">Search</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="container pt-2">
        @if (!Model.Ingredients.Any())
        {
            <h2 class="text-center">No ingredients found by the given criteria!</h2>
        }
        else
        {
            <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xl-4 g-4">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th><label>Id</label></th>
                            <th><lable>Name</lable></th>
                            <th><label>Category</label></th>
                            <th><label>Edit</label></th>
                            <th><lable>Delete</lable></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var ingredient in @Model.Ingredients)
                        {
                            <tr>
                                <td class="align-baseline">@ingredient.Id</td>
                                <td class="align-baseline">@ingredient.Name</td>
                                <td class="align-baseline">@ingredient.Category</td>
                                <td class="align-baseline"><label><a class="btn" asp-area="Admin" asp-controller="IngredientAdmin" asp-action="Edit" asp-route-id="@ingredient.Id">✔</a></label></td>
                                <td class="align-baseline">
                                    <label>
                                        <a class="btn" asp-area="Admin" asp-controller="IngredientAdmin" asp-action="Delete" asp-route-id="@ingredient.Id">❌</a>
                                    </label>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
    @{
        int maxPage = (int)Math.Ceiling((double)Model.TotalResults / Model.IngredientsPerPage);
        int previousPage = Model.CurrentPage - 1;
        int nextPage = Model.CurrentPage + 1;

        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage || !Model.Ingredients.Any();
        bool shouldPreviousPageBeDisabled = Model.CurrentPage == 1;
    }

    <!-- Pagination buttons -->
    @if (Model.TotalResults > Model.IngredientsPerPage)
    {
        <div aria-label="Page navigation" id="pagination-buttons">
            <ul class="pagination d-flex justify-content-end align-items-center">
                <li class="page-item">
                    <a class="pagination-btn @(shouldPreviousPageBeDisabled ? "disabled" : string.Empty)"
                    asp-area="Admin"
                    asp-controller="IngredientAdmin"
                    asp-action="All"
                    asp-route-currentPage="@previousPage"
                    asp-route-ingredientsPerPage="@Model.IngredientsPerPage"
                    asp-route-categoryId="@Model.CategoryId"
                    asp-route-searchString="@Model.SearchString"
                    asp-route-ingredientSorting="@(Model.IngredientSorting ?? 0)"
                    aria-disabled="@(shouldPreviousPageBeDisabled ? true : false)">
                        <i class="fa-solid fa-angles-left"></i>
                    </a>
                </li>
               
                <li class="page-item">
                    <a class="pagination-btn
            @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
                   asp-area="Admin"
                   asp-controller="IngredientAdmin"
                   asp-action="All"
                   asp-route-currentPage="@nextPage"
                   asp-route-ingredientsPerPage="@Model.IngredientsPerPage"
                   asp-route-categoryId="@Model.CategoryId"
                   asp-route-searchString="@Model.SearchString"
                   asp-route-ingredientSorting="@(Model.IngredientSorting ?? 0)"
                   aria-disabled="@(shouldPreviousPageBeDisabled ? true : false)">
                        <i class="fa-solid fa-angles-right"></i>
                   </a>
                </li>
            </ul>
        </div>
    }

</div>
